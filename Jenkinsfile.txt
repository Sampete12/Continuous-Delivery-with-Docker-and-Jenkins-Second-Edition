pipeline {
    agent { label 'docker-agent' }


    stages {
        stage('prepare environment') {
		when {branch 'master'}
	            steps {
                	echo 'all branches'
            		}
        }

        stage('Build') {
            steps {
                echo 'Building...'
                // Simulate build steps
                sh 'echo "Build complete"'
            }
        }

        stage('Run Pipeline against a gradle project - test branch') {
		when {
			not { branch 'master' }
		}            
		steps {
          		echo 'Unit test not Master branch'
            }
        }

        stage('Code Coverage') {
            when {
                branch 'master'
            }
            steps {
                echo 'Running Code Coverage...'
                // Simulate code coverage
                sh 'echo "Code coverage report generated"'
            }
        }

        stage('Feature Tests') {
            when {
                branch pattern: 'feature.*', result: true
            }
            steps {
                echo 'Running Feature Tests...'
                // Simulate feature tests
                sh 'echo "Feature tests passed"'
            }
        }

        stage('Fail on Other Branches') {
            when {
                not {
                    anyOf {
                        branch 'main'
                        branch pattern: 'feature.*', result: true
                    }
                }
            }
            steps {
                error('Branch name does not match allowed patterns.')
            }
        }
    }
}